from .diagrams import BaseGraph as BaseGraph
from .nesting import NestedState as NestedState
from typing import Any

class Graph(BaseGraph):
    fsm_graph: Any
    def generate(self, title: Any | None = ...): ...
    def get_graph(self, title: Any | None = ...): ...
    def set_node_style(self, state, style) -> None: ...
    def set_previous_transition(self, src, dst, key: Any | None = ...) -> None: ...
    def reset_styling(self) -> None: ...

class NestedGraph(Graph):
    seen_transitions: Any
    def __init__(self, *args, **kwargs) -> None: ...
    def set_node_style(self, state, style) -> None: ...
    def set_previous_transition(self, src, dst, key: Any | None = ...) -> None: ...
