from ..core import listify as listify
from .diagrams import BaseGraph as BaseGraph
from typing import Any

class Graph(BaseGraph):
    def __init__(self, machine, title: Any | None = ...) -> None: ...
    def set_previous_transition(self, src, dst, key: Any | None = ...) -> None: ...
    def set_node_style(self, state, style) -> None: ...
    custom_styles: Any
    def reset_styling(self): ...
    def generate(self, title: Any | None = ..., roi_state: Any | None = ...): ...
    def get_graph(self, title: Any | None = ...): ...
    @staticmethod
    def draw(graph, filename, format: Any | None = ..., prog: str = ..., args: str = ...): ...

class NestedGraph(Graph):
    def __init__(self, *args, **kwargs) -> None: ...
    def set_previous_transition(self, src, dst, key: Any | None = ...) -> None: ...
