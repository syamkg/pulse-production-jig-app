from serial import win32 as win32
from serial.serialutil import (
    PortNotOpenError as PortNotOpenError,
    SerialBase as SerialBase,
    SerialException as SerialException,
    SerialTimeoutException as SerialTimeoutException,
    to_bytes as to_bytes,
)
from typing import Any

class Serial(SerialBase):
    BAUDRATES: Any
    def __init__(self, *args, **kwargs) -> None: ...
    is_open: bool
    def open(self) -> None: ...
    def close(self) -> None: ...
    @property
    def in_waiting(self): ...
    def read(self, size: int = ...): ...
    def write(self, data): ...
    def flush(self) -> None: ...
    def reset_input_buffer(self) -> None: ...
    def reset_output_buffer(self) -> None: ...
    @property
    def cts(self): ...
    @property
    def dsr(self): ...
    @property
    def ri(self): ...
    @property
    def cd(self): ...
    def set_buffer_size(self, rx_size: int = ..., tx_size: Any | None = ...) -> None: ...
    def set_output_flow_control(self, enable: bool = ...) -> None: ...
    @property
    def out_waiting(self): ...
    def cancel_read(self) -> None: ...
    def cancel_write(self) -> None: ...
    def exclusive(self, exclusive) -> None: ...
