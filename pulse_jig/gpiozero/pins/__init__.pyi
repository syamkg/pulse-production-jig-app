from ..devices import Device
from ..exc import PinInvalidFunction as PinInvalidFunction
from typing import Any

str: Any

class Factory:
    def __init__(self) -> None: ...
    def reserve_pins(self, requester, *pins) -> None: ...
    def release_pins(self, reserver, *pins) -> None: ...
    def release_all(self, reserver) -> None: ...
    def close(self) -> None: ...
    def pin(self, spec) -> None: ...
    def spi(self, **spi_args) -> None: ...
    def ticks(self) -> None: ...
    def ticks_diff(self, later, earlier) -> None: ...
    pi_info: Any

class Pin:
    def close(self) -> None: ...
    function: str
    state: Any
    def output_with_state(self, state) -> None: ...
    pull: Any
    def input_with_pull(self, pull) -> None: ...
    frequency: Any
    bounce: Any
    edges: Any
    when_changed: Any

class SPI(Device):
    def read(self, n): ...
    def write(self, data): ...
    def transfer(self, data) -> None: ...
    @property
    def clock_polarity(self): ...
    clock_mode: Any
    @property
    def clock_phase(self): ...
    @clock_phase.setter
    def clock_phase(self, value) -> None: ...
    lsb_first: Any
    select_high: Any
    bits_per_word: Any
    rate: Any
