from . import SPI as SPI
from ..devices import Device as Device, SharedMixin as SharedMixin
from ..exc import DeviceClosed as DeviceClosed, PinUnknownPi as PinUnknownPi, SPIInvalidClockMode as SPIInvalidClockMode
from ..output_devices import OutputDevice as OutputDevice
from .pi import (
    PiFactory as PiFactory,
    PiPin as PiPin,
    SPI_HARDWARE_PINS as SPI_HARDWARE_PINS,
    spi_port_device as spi_port_device,
)
from .spi import SPISoftwareBus as SPISoftwareBus
from typing import Any

nstr = str
str: Any

def get_pi_revision(): ...

class LocalPiFactory(PiFactory):
    pins: Any
    def __init__(self) -> None: ...
    @staticmethod
    def ticks(): ...
    @staticmethod
    def ticks_diff(later, earlier): ...

class LocalPiPin(PiPin): ...

class LocalPiHardwareSPI(SPI):
    def __init__(self, clock_pin, mosi_pin, miso_pin, select_pin, pin_factory) -> None: ...
    def close(self) -> None: ...
    @property
    def closed(self): ...
    def transfer(self, data): ...

class LocalPiSoftwareSPI(SPI):
    def __init__(self, clock_pin, mosi_pin, miso_pin, select_pin, pin_factory) -> None: ...
    def close(self) -> None: ...
    @property
    def closed(self): ...
    def transfer(self, data): ...

class LocalPiHardwareSPIShared(SharedMixin, LocalPiHardwareSPI): ...
class LocalPiSoftwareSPIShared(SharedMixin, LocalPiSoftwareSPI): ...
