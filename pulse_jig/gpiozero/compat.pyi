import weakref
from collections import Mapping
from typing import Any

str: Any

def isclose(a, b, rel_tol: float = ..., abs_tol: float = ...): ...
def mean(data): ...
def median(data): ...
def log2(x): ...

class frozendict(Mapping):
    def __init__(self, *args, **kwargs) -> None: ...
    def __getitem__(self, key): ...
    def copy(self, **add_or_replace): ...
    def __iter__(self): ...
    def __len__(self): ...
    def __hash__(self): ...

class WeakMethod(weakref.ref):
    def __new__(cls, meth, callback: Any | None = ...): ...
    def __call__(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
    __hash__: Any
