import abc
from typing import Any

class BaseImage(metaclass=abc.ABCMeta):
    kind: Any
    allowed_kinds: Any
    needs_context: bool
    needs_processing: bool
    border: Any
    width: Any
    box_size: Any
    pixel_size: Any
    def __init__(self, border, width, box_size, *args, **kwargs) -> None: ...
    @abc.abstractmethod
    def drawrect(self, row, col): ...
    def drawrect_context(self, row, col, active, context) -> None: ...
    def process(self) -> None: ...
    @abc.abstractmethod
    def save(self, stream, kind: Any | None = ...): ...
    def pixel_box(self, row, col): ...
    @abc.abstractmethod
    def new_image(self, **kwargs): ...
    def get_image(self, **kwargs): ...
    def check_kind(self, kind, transform: Any | None = ...): ...
