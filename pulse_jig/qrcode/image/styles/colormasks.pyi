import ImageDraw as ImageDraw
from typing import Any

class QRColorMask:
    back_color: Any
    has_transparency: bool
    paint_color: Any
    def initialize(self, styledPilImage, image) -> None: ...
    def apply_mask(self, image) -> None: ...
    def get_fg_pixel(self, image, x, y) -> None: ...
    def get_bg_pixel(self, image, x, y): ...
    def interp_num(self, n1, n2, norm): ...
    def interp_color(self, col1, col2, norm): ...
    def extrap_num(self, n1, n2, interped_num): ...
    def extrap_color(self, col1, col2, interped_color): ...

class SolidFillColorMask(QRColorMask):
    back_color: Any
    front_color: Any
    has_transparency: Any
    def __init__(self, back_color=..., front_color=...) -> None: ...
    def apply_mask(self, image) -> None: ...
    def get_fg_pixel(self, image, x, y): ...

class RadialGradiantColorMask(QRColorMask):
    back_color: Any
    center_color: Any
    edge_color: Any
    has_transparency: Any
    def __init__(self, back_color=..., center_color=..., edge_color=...) -> None: ...
    def get_fg_pixel(self, image, x, y): ...

class SquareGradiantColorMask(QRColorMask):
    back_color: Any
    center_color: Any
    edge_color: Any
    has_transparency: Any
    def __init__(self, back_color=..., center_color=..., edge_color=...) -> None: ...
    def get_fg_pixel(self, image, x, y): ...

class HorizontalGradiantColorMask(QRColorMask):
    back_color: Any
    left_color: Any
    right_color: Any
    has_transparency: Any
    def __init__(self, back_color=..., left_color=..., right_color=...) -> None: ...
    def get_fg_pixel(self, image, x, y): ...

class VerticalGradiantColorMask(QRColorMask):
    back_color: Any
    top_color: Any
    bottom_color: Any
    has_transparency: Any
    def __init__(self, back_color=..., top_color=..., bottom_color=...) -> None: ...
    def get_fg_pixel(self, image, x, y): ...

class ImageColorMask(QRColorMask):
    back_color: Any
    color_img: Any
    has_transparency: Any
    def __init__(
        self, back_color=..., color_mask_path: Any | None = ..., color_mask_image: Any | None = ...
    ) -> None: ...
    paint_color: Any
    def initialize(self, styledPilImage, image) -> None: ...
    def get_fg_pixel(self, image, x, y): ...
