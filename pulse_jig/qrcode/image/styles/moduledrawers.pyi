from typing import Any

ANTIALIASING_FACTOR: int

class QRModuleDrawer:
    fill: Any
    def initialize(self, styledPilImage, image) -> None: ...
    def drawrect_context(self, box, is_active, context) -> None: ...
    DIRECTIONS: Any
    def get(self, context, direction): ...

class SquareModuleDrawer(QRModuleDrawer):
    fill: Any
    imgDraw: Any
    def initialize(self, styledPilImage, image) -> None: ...
    def drawrect_context(self, box, is_active, context) -> None: ...

class GappedSquareModuleDrawer(QRModuleDrawer):
    fill: Any
    size_ratio: Any
    def __init__(self, size_ratio: float = ...) -> None: ...
    imgDraw: Any
    delta: Any
    def initialize(self, styledPilImage, image) -> None: ...
    def drawrect_context(self, box, is_active, context) -> None: ...

class CircleModuleDrawer(QRModuleDrawer):
    circle: Any
    image: Any
    def initialize(self, styledPilImage, image) -> None: ...
    def drawrect_context(self, box, is_active, context) -> None: ...

class RoundedModuleDrawer(QRModuleDrawer):
    radius_ratio: Any
    def __init__(self, radius_ratio: int = ...) -> None: ...
    corner_width: Any
    image: Any
    def initialize(self, styledPilImage, image) -> None: ...
    SQUARE: Any
    NW_ROUND: Any
    SW_ROUND: Any
    SE_ROUND: Any
    NE_ROUND: Any
    def setup_corners(self, mode, back_color, front_color) -> None: ...
    def drawrect_context(self, box, is_active, context) -> None: ...

class VerticalBarsDrawer(QRModuleDrawer):
    horizontal_shrink: Any
    def __init__(self, horizontal_shrink: float = ...) -> None: ...
    half_height: Any
    image: Any
    delta: Any
    def initialize(self, styledPilImage, image) -> None: ...
    SQUARE: Any
    ROUND_TOP: Any
    ROUND_BOTTOM: Any
    def setup_edges(self, mode, back_color, front_color) -> None: ...
    def drawrect_context(self, box, is_active, context) -> None: ...

class HorizontalBarsDrawer(QRModuleDrawer):
    vertical_shrink: Any
    def __init__(self, vertical_shrink: float = ...) -> None: ...
    half_width: Any
    image: Any
    delta: Any
    def initialize(self, styledPilImage, image) -> None: ...
    SQUARE: Any
    ROUND_LEFT: Any
    ROUND_RIGHT: Any
    def setup_edges(self, mode, back_color, front_color) -> None: ...
    def drawrect_context(self, box, is_active, context) -> None: ...
